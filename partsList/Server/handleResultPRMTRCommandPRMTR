{
        new Thread(new Runnable(){
			public void  /*INTERNAL*/  run() {
				try {
					try {
						command.checkException();
						command.accept(new CommandVisitor() {
							public void handleCreateComponentCommand(
									PersistentCreateComponentCommand createComponentCommand)
									throws PersistenceException {
								getThis().getComponents().add(createComponentCommand.getCommandResult());
								
							}
							public void handleAddComponentCommand(
									PersistentAddComponentCommand addComponentCommand)
									throws PersistenceException {
								// no further action necessary
							}
						});
						signalChanged(true);
					} catch (model.UserException e) {
						model.UserExceptionToDisplayVisitor visitor = new model.UserExceptionToDisplayVisitor();
						e.accept(visitor);
						getErrors().add(visitor.getResult());
						signalChanged(true);
					}
				} catch (PersistenceException e) {
					//Handle fatal exception!
				}
			}
		}).start();
    }